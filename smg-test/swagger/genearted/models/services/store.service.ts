import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { AbstractHttpService } from './base/abstract-http.service';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class StoreService extends AbstractHttpService {
  constructor(
    protected http: HttpClient
  ) {
    super('StoreService', http);
  }

  /** 
  * Returns pet inventories by status Generated by ngx-smg 
  * @description Returns a map of status codes to quantities 
  */
  public getInventory(): Observable<any> {
    const url: string = this.baseUrl + '/store/inventory';
    return this.http.get<any>(url).pipe();
  
  }
  /** 
  * Place an order for a pet Generated by ngx-smg 
  *  
  */
  public placeOrder(): Observable<any> {
    const url: string = this.baseUrl + '/store/order';
  const bodyData: any = {};
  return this.http.post<any>(url, bodyData).pipe();
  
  }
  /** 
  * Find purchase order by ID Generated by ngx-smg 
  * @description For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions 
  */
  public getOrderById(orderId: number): Observable<any> {
    const url: string = this.baseUrl + '/store/order/' + orderId + '';
    return this.http.get<any>(url).pipe();
  
  }
  /** 
  * Delete purchase order by ID Generated by ngx-smg 
  * @description For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors 
  */
  public deleteOrder(orderId: number): Observable<any> {
    const url: string = this.baseUrl + '/store/order/' + orderId + '';
    return this.http.delete<any>(url).pipe();
  
  }
}
