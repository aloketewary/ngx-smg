import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { AbstractHttpService } from './base/abstract-http.service';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class UserService extends AbstractHttpService {
  constructor(
    protected http: HttpClient
  ) {
    super('UserService', http);
  }

  /**
  * Create user Generated by ngx-smg
  * @description This can only be done by the logged in user.
  */
  public createUser(): Observable<any> {
    const url: string = this.baseUrl + '/user';
  const bodyData: any = {};
  return this.http.post<any>(url, bodyData).pipe();

  }
  /**
  * Creates list of users with given input array Generated by ngx-smg
  *
  */
  public createUsersWithArrayInput(): Observable<any> {
    const url: string = this.baseUrl + '/user/createWithArray';
  const bodyData: any = {};
  return this.http.post<any>(url, bodyData).pipe();

  }
  /**
  * Creates list of users with given input array Generated by ngx-smg
  *
  */
  public createUsersWithListInput(): Observable<any> {
    const url: string = this.baseUrl + '/user/createWithList';
  const bodyData: any = {};
  return this.http.post<any>(url, bodyData).pipe();

  }
  /**
  * Logs user into the system Generated by ngx-smg
  *
  */
  public loginUser(): Observable<any> {
    const url: string = this.baseUrl + '/user/login';
    return this.http.get<any>(url).pipe();

  }
  /**
  * Logs out current logged in user session Generated by ngx-smg
  *
  */
  public logoutUser(): Observable<any> {
    const url: string = this.baseUrl + '/user/logout';
    return this.http.get<any>(url).pipe();

  }
  /**
  * Get user by user name Generated by ngx-smg
  *
  */
  public getUserByName(username: string): Observable<any> {
    const url: string = this.baseUrl + '/user/' + username + ''
    return this.http.get<any>(url).pipe();

  }
  /**
  * Updated user Generated by ngx-smg
  * @description This can only be done by the logged in user.
  */
  public updateUser(username: string): Observable<any> {
    const url: string = this.baseUrl + '/user/' + username + '';
  const bodyData: any = {};
  return this.http.put<any>(url, bodyData).pipe();

  }
  /**
  * Delete user Generated by ngx-smg
  * @description This can only be done by the logged in user.
  */
  public deleteUser(username: string): Observable<any> {
    const url: string = this.baseUrl + '/user/' + username + '';
    return this.http.delete<any>(url).pipe();

  }
}
