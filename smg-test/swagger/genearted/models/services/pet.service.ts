import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { AbstractHttpService } from './base/abstract-http.service';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class PetService extends AbstractHttpService {
  constructor(
    protected http: HttpClient
  ) {
    super('PetService', http);
  }

  /** 
  * Add a new pet to the store Generated by ngx-smg 
  *  
  */
  public addPet(): Observable<any> {
    const url: string = this.baseUrl + '/pet';
  const bodyData: any = {};
  return this.http.post<any>(url, bodyData).pipe();
  
  }
  /** 
  * Update an existing pet Generated by ngx-smg 
  *  
  */
  public updatePet(): Observable<any> {
    const url: string = this.baseUrl + '/pet';
  const bodyData: any = {};
  return this.http.put<any>(url, bodyData).pipe();
  
  }
  /** 
  * Finds Pets by status Generated by ngx-smg 
  * @description Multiple status values can be provided with comma separated strings 
  */
  public findPetsByStatus(): Observable<any> {
    const url: string = this.baseUrl + '/pet/findByStatus';
    return this.http.get<any>(url).pipe();
  
  }
  /** 
  * Finds Pets by tags Generated by ngx-smg 
  * @description Muliple tags can be provided with comma separated strings. Use         tag1
   tag2
   tag3 for testing. 
  */
  public findPetsByTags(): Observable<any> {
    const url: string = this.baseUrl + '/pet/findByTags';
    return this.http.get<any>(url).pipe();
  
  }
  /** 
  * Find pet by ID Generated by ngx-smg 
  * @description Returns a single pet 
  */
  public getPetById(petId: number): Observable<any> {
    const url: string = this.baseUrl + '/pet/' + petId + '';
    return this.http.get<any>(url).pipe();
  
  }
  /** 
  * Updates a pet in the store with form data Generated by ngx-smg 
  *  
  */
  public updatePetWithForm(petId: number): Observable<any> {
    const url: string = this.baseUrl + '/pet/' + petId + '';
  const bodyData: any = {};
  return this.http.post<any>(url, bodyData).pipe();
  
  }
  /** 
  * Deletes a pet Generated by ngx-smg 
  *  
  */
  public deletePet(petId: number): Observable<any> {
    const url: string = this.baseUrl + '/pet/' + petId + '';
    return this.http.delete<any>(url).pipe();
  
  }
  /** 
  * uploads an image Generated by ngx-smg 
  *  
  */
  public uploadFile(petId: number): Observable<any> {
    const url: string = this.baseUrl + '/pet/' + petId + '/uploadImage';
  const bodyData: any = {};
  return this.http.post<any>(url, bodyData).pipe();
  
  }
}
